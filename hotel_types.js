//
// Autogenerated by Thrift Compiler (0.9.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var ttypes = module.exports = {};
Hotel = module.exports.Hotel = function(args) {
  this.business_name = null;
  this.province_name = null;
  this.kecamatan_name = null;
  this.city_name = null;
  this.star_rating = null;
  this.min_net_price = null;
  this.min_sell_price = null;
  this.rating = null;


  if (args) {
    if (args.business_name !== undefined) {
      this.business_name = args.business_name;
    }

    if (args.province_name !== undefined) {
      this.province_name = args.province_name;
    }

    if (args.kecamatan_name !== undefined) {
      this.kecamatan_name = args.kecamatan_name;
    }

    if (args.city_name !== undefined) {
      this.city_name = args.city_name;
    }

    if (args.star_rating !== undefined) {
      this.star_rating = args.star_rating;
    }

    if (args.min_net_price !== undefined) {
      this.min_net_price = args.min_net_price;
    }

    if (args.min_sell_price !== undefined) {
      this.min_sell_price = args.min_sell_price;
    }

    if (args.rating !== undefined) {
      this.rating = args.rating;
    }
   
  }
};
Hotel.prototype = {};
Hotel.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
        if (ftype == Thrift.Type.STRING) {
          this.business_name = input.readString();
        } else {
          input.skip(ftype);
        }
      break;
      case 2:
        if (ftype == Thrift.Type.STRING) {
          this.province_name = input.readString();
        } else {
          input.skip(ftype);
        }
      break;
      case 3:
        if (ftype == Thrift.Type.STRING) {
          this.kecamatan_name = input.readString();
        } else {
          input.skip(ftype);
        }
      break;
      case 4:
        if (ftype == Thrift.Type.STRING) {
          this.city_name = input.readString();
        } else {
          input.skip(ftype);
        }
      break;
      case 5:
        if (ftype == Thrift.Type.I32) {
          this.star_rating = input.readI32();
        } else {
          input.skip(ftype);
        }
      break;
      case 6:
        if (ftype == Thrift.Type.STRING) {
          this.min_net_price = input.readString();
        } else {
          input.skip(ftype);
        }
      break;
      case 7:
        if (ftype == Thrift.Type.I32) {
          this.min_sell_price = input.readI32();
        } else {
          input.skip(ftype);
        }
      break;
      case 8:
        if (ftype == Thrift.Type.I32) {
          this.rating = input.readI32();
        } else {
          input.skip(ftype);
        }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Hotel.prototype.write = function(output) {
  output.writeStructBegin('Hotel');
  if (this.business_name !== null && this.business_name !== undefined) {
    output.writeFieldBegin('business_name', Thrift.Type.STRING, 1);
    output.writeString(this.business_name);
    output.writeFieldEnd();
  }

  if (this.province_name !== null && this.province_name !== undefined) {
    output.writeFieldBegin('province_name', Thrift.Type.STRING, 2);
    output.writeString(this.province_name);
    output.writeFieldEnd();
  }

  if (this.kecamatan_name !== null && this.kecamatan_name !== undefined) {
    output.writeFieldBegin('kecamatan_name', Thrift.Type.STRING, 3);
    output.writeString(this.kecamatan_name);
    output.writeFieldEnd();
  }

  if (this.city_name !== null && this.city_name !== undefined) {
    output.writeFieldBegin('city_name', Thrift.Type.STRING, 4);
    output.writeString(this.city_name);
    output.writeFieldEnd();
  }

  if (this.star_rating !== null && this.star_rating !== undefined) {
    output.writeFieldBegin('star_rating', Thrift.Type.I32, 5);
    output.writeI32(this.star_rating);
    output.writeFieldEnd();
  }

  if (this.min_net_price !== null && this.min_net_price !== undefined) {
    output.writeFieldBegin('min_net_price', Thrift.Type.STRING, 6);
    output.writeString(this.min_net_price);
    output.writeFieldEnd();
  }

  if (this.min_sell_price !== null && this.min_sell_price !== undefined) {
    output.writeFieldBegin('min_sell_price', Thrift.Type.I32, 7);
    output.writeI32(this.min_sell_price);
    output.writeFieldEnd();
  }

  if (this.rating !== null && this.rating !== undefined) {
    output.writeFieldBegin('rating', Thrift.Type.I32, 8);
    output.writeI32(this.rating);
    output.writeFieldEnd();
  }

  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

